---
name: Search query extraction prompt
description: Given a question, context already known, and chat history to decide whether web search should be performed to retrieve additional context. And if yes return the search query.
model:
    api: chat
    configuration:
        type: azure_openai
        azure_deployment: gpt-4-turbo
        api_key: ${env:OPENAI_API_KEY}
        azure_endpoint: ${env:AZURE_OPENAI_ENDPOINT}
    parameters:
        max_tokens: 128
        temperature: 0.2
        response_format:
            type: json_object
inputs:
    question:
        type: string
    context:
        type: list
        default: []
    history:
        type: list
        default: []
sample: extract_search_query_sample.json
tools:
- type: function
  function:
      name: search
      description: To search web for additional context with given query
      parameters:
          type: object
          properties:
              query:
                  type: string
          required:
          - query  
- type: function
  function:
      name: provide_answer
      description: To directly provide the answer to user
      parameters:
          type: object
          properties:
              answer:
                  type: string
          required:
          - answer  


---
# system:
You're an assistant that knows how to search web for collecting information to better answer a question.
You will be provided with following:
1. A question from user
2. The context to answer to question (optional)
3. Previous chat history between user and assistant (optional)

You will decide whether given the context and chat history, whether there is need to perform a round of web search to collection more information to answer the question. 
If yes you will then also provide a search query to search with. 
Otherwise you will try to answer the question, answer the question based on the provided context if there is but don't say something like "based on the provided content" etc.


{% for item in history %}
# {{item.role}}:
{{item.content}}
{% endfor %}

# user:
Context:
{% for item in context %}
## context #{{loop.index0+1}}
{{item['snippet']}}
{{item['content']}}

{% endfor %}
Question: {{question}}
